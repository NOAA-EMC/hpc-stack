name: Build Ubuntu
on: [push, pull_request]

jobs:
  build:
    env:
      VERBOSE: 1
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        mpi: ['openmpi', 'mpich']

    steps:

    - name: Install dependencies (OpenMPI)
      if: matrix.mpi == 'openmpi'
      run: |
        sudo apt-get update
        sudo apt-get install openmpi-bin libopenmpi-dev

    - name: Install dependencies (MPICH)
      if: matrix.mpi == 'mpich'
      run: |
        sudo apt-get update
        sudo apt-get install libmpich-dev

    - name: Get sources
      uses: actions/checkout@v2
      with:
        path: ${{ matrix.mpi }}

    - name: Build
      run: |
        cd ${{ matrix.mpi }}
        prefix=$GITHUB_WORKSPACE/install-${{ matrix.mpi }}
        if [[ ${{ matrix.mpi }} == "mpich" ]]; then
          mpi_ver=$( mpiexec --version | grep Version | awk '{ print $2 }' )
        elif [[ ${{ matrix.mpi }} == "openmpi" ]]; then
          mpi_ver=$( mpiexec --version | grep OpenRTE | awk '{ print $3 }' )
        fi
        gnu_ver=$( gcc -dumpfullversion -dumpversion )
        export HPC_COMPILER="gnu/${gnu_ver}"
        export HPC_MPI="${{ matrix.mpi }}/${mpi_ver}"
        ./build_stack.sh -p $prefix -c config/config_custom.sh -y config/stack_custom.yaml

    - name: Upload logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.mpi }}-log
        path: ${{ matrix.mpi }}/log
