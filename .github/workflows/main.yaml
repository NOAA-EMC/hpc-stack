name: Build
on: [push, pull_request]

jobs:
  build:
    env:
      FC: gfortran-9
      VERBOSE: 1
    strategy:
      matrix:
        os: ['ubuntu-20.04']
        mpi: ['openmpi']
        #os: ['ubuntu-20.04', 'macos-10.15']
        #mpi: ['openmpi', 'mpich']
        #exclude:
        #  - os: 'macos-10.15'
        #    mpi: 'openmpi'
    runs-on: ${{ matrix.os }}

    steps:

    - name: Install dependencies (Linux & OpenMPI)
      run: |
        sudo apt-get update
        sudo apt-get install openmpi-bin libopenmpi-dev
      if: matrix.os == 'ubuntu-20.04' && matrix.mpi == 'openmpi'

    - name: Install dependencies (Linux & MPICH)
      run: |
        sudo apt-get update
        sudo apt-get install libmpich-dev
      if: matrix.os == 'ubuntu-20.04' && matrix.mpi == 'mpich'

    - name: Install dependencies (macOS & MPICH)
      run: |
        brew install mpich
      if: matrix.os == 'macos-10.15' && matrix.mpi == 'mpich'

    - name: Get Sources
      uses: actions/checkout@v2
      with:
        path: ${{ matrix.os }}-${{ matrix.mpi }}
        submodules: true

    - name: Build (Linux)
      run: |
        cd ${{ matrix.os }}-${{ matrix.mpi }}
        prefix=$GITHUB_WORKSPACE/install-${{ matrix.os }}-${{ matrix.mpi }}
        export PATH="$prefix/bin:$PATH"
        export LD_LIBRARY_PATH="$prefix/lib:$LD_LIBRARY_PATH"
        ./build_stack.sh -p $prefix -c config/config_custom.sh -y config/stack_custom.yaml
      if: matrix.os == 'ubuntu-20.04'

    - name: Build (macOS)
      run: |
        cd ${{ matrix.os }}-${{ matrix.mpi }}
        prefix=$GITHUB_WORKSPACE/install-${{ matrix.os }}-${{ matrix.mpi }}
        export PATH="$prefix/bin:$PATH"
        export LD_LIBRARY_PATH="$prefix/lib:$LD_LIBRARY_PATH"
        ./build_stack.sh -p $prefix -c config/config_mac.sh -y config/stack_mac.yaml
      if: matrix.os == 'macos-10.15'
